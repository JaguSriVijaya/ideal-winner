<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="56204" started-at="2021-02-17T22:25:49 IST" finished-at="2021-02-17T22:26:45 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="56204" started-at="2021-02-17T22:25:49 IST" finished-at="2021-02-17T22:26:45 IST">
      <class name="extent.extent.NopCommercetest">
        <test-method status="PASS" signature="setExtent()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="setExtent" is-config="true" duration-ms="97" started-at="2021-02-17T22:25:49 IST" finished-at="2021-02-17T22:25:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="setUp" is-config="true" duration-ms="15510" started-at="2021-02-17T22:25:49 IST" finished-at="2021-02-17T22:26:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="noCOmmerceTitle()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="noCOmmerceTitle" duration-ms="22" started-at="2021-02-17T22:26:05 IST" finished-at="2021-02-17T22:26:05 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [nopCommerce demoq store] but found [nopCommerce demo store]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [nopCommerce demoq store] but found [nopCommerce demo store]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at extent.extent.NopCommercetest.noCOmmerceTitle(NopCommercetest.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noCOmmerceTitle -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="tearDown" is-config="true" duration-ms="232" started-at="2021-02-17T22:26:05 IST" finished-at="2021-02-17T22:26:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=noCOmmerceTitle status=FAILURE method=NopCommercetest.noCOmmerceTitle()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="setUp" is-config="true" duration-ms="27005" started-at="2021-02-17T22:26:05 IST" finished-at="2021-02-17T22:26:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="noCommerceLogintest()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="noCommerceLogintest" duration-ms="6" started-at="2021-02-17T22:26:32 IST" finished-at="2021-02-17T22:26:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noCommerceLogintest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="tearDown" is-config="true" duration-ms="16" started-at="2021-02-17T22:26:32 IST" finished-at="2021-02-17T22:26:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=noCommerceLogintest status=SUCCESS method=NopCommercetest.noCommerceLogintest()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="setUp" is-config="true" duration-ms="12851" started-at="2021-02-17T22:26:32 IST" finished-at="2021-02-17T22:26:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="noCommerceLogo()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="noCommerceLogo" duration-ms="140" started-at="2021-02-17T22:26:45 IST" finished-at="2021-02-17T22:26:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noCommerceLogo -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-02-17T22:26:45 IST" finished-at="2021-02-17T22:26:45 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=noCommerceLogo status=SUCCESS method=NopCommercetest.noCommerceLogo()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:extent.extent.NopCommercetest@77ec78b9]" name="endReport" is-config="true" duration-ms="307" started-at="2021-02-17T22:26:45 IST" finished-at="2021-02-17T22:26:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- extent.extent.NopCommercetest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
